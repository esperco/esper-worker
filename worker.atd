type json_ast <ocaml module="Yojson.Basic" t="json"> = abstract
type json = json_ast wrap <ocaml t="string"
                                 wrap="Yojson.Basic.to_string"
                                 unwrap="Yojson.Basic.from_string">

type jobid = string wrap <ocaml module="Worker_jobid">
type timestamp = string wrap <ocaml module="Util_time">

type job = {
  jobid: jobid;
    (* unique job identifier; a job that fails may be rescheduled
       while preserving its jobid *)
  start: timestamp;
    (* date after which we should start trying to perform the action *)
  ?expiry: timestamp option;
    (* date after which we should stop trying *)
  ~do_not_retry: bool;
    (* if true, we will attempt this job only once *)
  attempts: int;
    (* number of attempts so far *)
  action: (string * json);
    (* specification of the action to perform *)
}
